name: Build and Deploy to AWS S3

# --- Disparadores (Triggers) ---
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  # --- JOB 1: CONSTRUIR EL PROYECTO ---
  build:
    name: Build Next.js Static Site
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build static website
        run: pnpm build # Esto creará la carpeta 'out'

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: static-site-artifact # Nombre del artefacto
          path: ./out # La carpeta que queremos pasar al siguiente job

  # --- JOB 2: DESPLEGAR EN AWS ---
  deploy:
    name: Deploy to S3
    runs-on: ubuntu-latest
    needs: build # ¡Importante! Este job depende de que el job 'build' termine con éxito.

    # Permisos para autenticación segura con AWS OIDC
    permissions:
      id-token: write
      contents: read

    # Configuración del entorno de despliegue (opcional pero recomendado)
    # Replica el 'environment' de GitLab y permite reglas de protección
    environment:
      name: ${{ github.ref_name }} # El nombre del entorno será el nombre de la rama (develop, qa, main)
      url: ${{ secrets.WEBSITE_URL }} # Opcional: añade la URL de tu sitio en los secretos de GitHub

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: static-site-artifact # Debe coincidir con el nombre del 'upload'
          # El artefacto se descargará en el directorio actual, creando la carpeta 'out'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_ARN }} # ARN del rol de IAM para OIDC
          aws-region: ${{ secrets.AWS_REGION }} # Tu región de AWS

      - name: Sync files to S3
        run: |
          aws s3 sync . s3://${{ secrets.AWS_S3_BUCKET_NAME }} --delete
          # Sincroniza el contenido de 'out' (que está ahora en la raíz) al bucket.
          # La bandera --delete elimina archivos viejos.

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"